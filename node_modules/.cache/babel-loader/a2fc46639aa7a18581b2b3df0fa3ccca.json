{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tappable, { ACTIVE_EFFECT_DELAY } from '../Tappable/Tappable';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { IS_PLATFORM_IOS } from '../../lib/platform';\nvar baseClassName = getClassName('Radio');\n\nvar Radio = function Radio(_ref) {\n  var children = _ref.children,\n      description = _ref.description,\n      style = _ref.style,\n      className = _ref.className,\n      getRef = _ref.getRef,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"description\", \"style\", \"className\", \"getRef\", \"getRootRef\"]);\n\n  return React.createElement(Tappable, {\n    component: \"label\",\n    style: style,\n    className: classNames(baseClassName, className),\n    activeEffectDelay: IS_PLATFORM_IOS ? 100 : ACTIVE_EFFECT_DELAY,\n    disabled: restProps.disabled,\n    getRootRef: getRootRef\n  }, React.createElement(\"input\", _extends({}, restProps, {\n    type: \"radio\",\n    className: \"Radio__input\",\n    ref: getRef\n  })), React.createElement(\"div\", {\n    className: \"Radio__container\"\n  }, React.createElement(\"div\", {\n    className: \"Radio__icon\"\n  }), React.createElement(\"div\", {\n    className: \"Radio__content\"\n  }, children, React.createElement(\"div\", {\n    className: \"Radio__description\"\n  }, description))));\n};\n\nRadio.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  getRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  getRootRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })])\n};\nexport default Radio;","map":null,"metadata":{},"sourceType":"module"}