{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nvar baseClassName = getClassName('Tabbar');\n\nvar Tabbar = function Tabbar(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      shadow = _ref.shadow,\n      itemsLayout = _ref.itemsLayout,\n      insets = _ref.insets;\n\n  var getItemsLayout = function getItemsLayout() {\n    switch (itemsLayout) {\n      case 'horizontal':\n      case 'vertical':\n        return itemsLayout;\n\n      default:\n        return React.Children.count(children) > 2 ? 'vertical' : 'horizontal';\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classNames(baseClassName, className, \"Tabbar--l-\".concat(getItemsLayout()), {\n      'Tabbar--shadow': shadow\n    }),\n    style: {\n      paddingBottom: isNumeric(insets.bottom) ? insets.bottom : null\n    }\n  }, children);\n};\n\nTabbar.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n\n  /**\n   * Флаг для показа/скрытия верхней тени (Android) или границы (iOS)\n   */\n  shadow: PropTypes.bool,\n  itemsLayout: PropTypes.oneOf(['vertical', 'horizontal', 'auto']),\n\n  /**\n   * @ignore\n   */\n  insets: PropTypes.object\n};\nTabbar.defaultProps = {\n  shadow: true\n};\nexport default withInsets(Tabbar);","map":null,"metadata":{},"sourceType":"module"}