{"version":3,"sources":["../../src/hoc/withInsets.tsx"],"names":["initialState","bottom","top","left","right","resolveInsets","e","detail","type","data","insets","vkConnect","subscribe","withInsets","Component","WithInsets","setState","connectListener","unsubscribe","props","state","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,GAAG,EAAE,IAFY;AAGjBC,EAAAA,IAAI,EAAE,IAHW;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAAnB;;AAOA,SAASC,aAAT,CAAwBC,CAAxB,EAA2B;AAAA,kBACFA,CAAC,CAACC,MADA;AAAA,MACjBC,IADiB,aACjBA,IADiB;AAAA,MACXC,IADW,aACXA,IADW;;AAEzB,UAAQD,IAAR;AACE,SAAK,sBAAL;AACA,SAAK,sBAAL;AAA6B;AAA7B,UACUE,MADV,GACqBD,IADrB,CACUC,MADV;;AAEE,UAAIA,MAAJ,EAAY;AACV,iCACKA,MADL;AAEET,UAAAA,MAAM,EAAES,MAAM,CAACT,MAAP,GAAgB,GAAhB,GAAsB,CAAtB,GAA0BS,MAAM,CAACT,MAF3C,CAEkD;;AAFlD;AAID;;AATL;AAWD;;AAEDU,mBAAUC,SAAV,CAAoB,UAACN,CAAD,EAAO;AACzB,MAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;;AACA,MAAII,MAAJ,EAAY;AACVV,IAAAA,YAAY,GAAGU,MAAf;AACD;AACF,CALD;;AAOe,SAASG,UAAT,CAAuBC,SAAvB,EAAwC;AAAA,MAC/CC,UAD+C;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,0FAE3Cf,YAF2C;AAAA,oGAYjC,UAACM,CAAD,EAAO;AACvB,YAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;;AACA,YAAII,MAAJ,EAAY;AACV,gBAAKM,QAAL,CAAcN,MAAd;AACD;AACF,OAjBkD;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAI9B;AACnBC,2BAAUC,SAAV,CAAoB,KAAKK,eAAzB;AACD;AANkD;AAAA;AAAA,6CAQ3B;AACtBN,2BAAUO,WAAV,CAAsB,KAAKD,eAA3B;AACD;AAVkD;AAAA;AAAA,+BAmBzC;AACR,eACE;AACA,uCAAC,SAAD,6BAAe,KAAKE,KAApB;AAA2B,YAAA,MAAM,EAAE,KAAKC;AAAxC;AAFF;AAID;AAxBkD;AAAA;AAAA,IAC5BC,eAAMP,SADsB;;AA2BrD,SAAOC,UAAP;AACD","sourcesContent":["import React from 'react';\nimport vkConnect from '@vkontakte/vk-connect';\n\nlet initialState = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null\n};\n\nfunction resolveInsets (e) {\n  const { type, data } = e.detail;\n  switch (type) {\n    case 'VKWebAppUpdateConfig':\n    case 'VKWebAppUpdateInsets': // Устаревшее событие vk-connect\n      const { insets } = data;\n      if (insets) {\n        return {\n          ...insets,\n          bottom: insets.bottom > 100 ? 0 : insets.bottom // если больше 100 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        };\n      }\n  }\n}\n\nvkConnect.subscribe((e) => {\n  const insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\n\nexport default function withInsets<T>(Component: T): T {\n  class WithInsets extends React.Component {\n    state = initialState;\n\n    componentDidMount () {\n      vkConnect.subscribe(this.connectListener);\n    }\n\n    componentWillUnmount () {\n      vkConnect.unsubscribe(this.connectListener);\n    }\n\n    connectListener = (e) => {\n      const insets = resolveInsets(e);\n      if (insets) {\n        this.setState(insets);\n      }\n    };\n\n    render () {\n      return (\n        // @ts-ignore\n        <Component {...this.props} insets={this.state} />\n      );\n    }\n  }\n\n  return WithInsets as unknown as T;\n}\n"],"file":"withInsets.js"}